---
import type { UrlData } from '../types/url'
import Button from './ui/Button.astro'

interface Props {
  originalUrl: UrlData['originalUrl']
  shortUrl: UrlData['shortUrl']
  createdDate?: UrlData['createdDate']
  index?: number
}

const { originalUrl, shortUrl, createdDate, index = 0 } = Astro.props
const copyButtonId = `copy-btn-${index}`
---

<li class="border-neon rounded-lg p-4">
  <p class="mb-3">
    <strong>Original URL:</strong>
    <a
      href={originalUrl}
      class="text-blue-500 hover:underline"
      target="_blank"
      rel="noopener noreferrer"
    >
      {originalUrl}
    </a>
  </p>
  <div class="flex items-center justify-between gap-4">
    <div class="flex-1 mb-3">
      <strong>Shortened URL:</strong>
      <a
        href={shortUrl}
        class="text-blue-500 hover:underline shortened-url"
        target="_blank"
        rel="noopener noreferrer"
        data-url={shortUrl}
        data-index={index}
      >
        {shortUrl}
      </a>
    </div>
    <Button
      id={copyButtonId}
      type="button"
      class="btn px-4 py-2 text-sm transition-all duration-200 hover:scale-105"
      data-url={shortUrl}
      data-index={index}
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        stroke-width="1.5"
        stroke="orange"
        class="size-6 overflow-visible"
        ><defs
          ><filter id="glow" x="-50%" y="-50%" width="200%" height="200%"
            ><feGaussianBlur stdDeviation="2.5" result="coloredBlur"
            ></feGaussianBlur><feMerge
              ><feMergeNode in="coloredBlur"></feMergeNode><feMergeNode
                in="SourceGraphic"></feMergeNode></feMerge
            ></filter
          ></defs
        ><path
          stroke-linecap="round"
          stroke-linejoin="round"
          d="M15.666 3.888A2.25 2.25 0 0 0 13.5 2.25h-3c-1.03 0-1.9.693-2.166 1.638m7.332 0c.055.194.084.4.084.612v0a.75.75 0 0 1-.75.75H9a.75.75 0 0 1-.75-.75v0c0-.212.03-.418.084-.612m7.332 0c.646.049 1.288.11 1.927.184 1.1.128 1.907 1.077 1.907 2.185V19.5a2.25 2.25 0 0 1-2.25 2.25H6.75A2.25 2.25 0 0 1 4.5 19.5V6.257c0-1.108.806-2.057 1.907-2.185a48.208 48.208 0 0 1 1.927-.184"
          filter="url(#glow)"></path></svg
      >
    </Button>
  </div>
  <p class="gap-4">
    <strong>Date:</strong>
    <span class="text-blue-500">{createdDate}</span>
  </p>
</li>

<script define:vars={{ copyButtonId, shortUrl }}>
  const copyButton = document.getElementById(copyButtonId)
  if (copyButton) {
    const svg = copyButton.querySelector('svg')
    const path = svg.querySelector('path')
    const originalD = path.getAttribute('d')
    const originalStroke = path.getAttribute('stroke')
    const checkD = 'M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z'
    const checkStroke = 'green'

    copyButton.addEventListener('click', () => {
      navigator.clipboard
        .writeText(shortUrl)
        .then(() => {
          path.setAttribute('d', checkD)
          path.setAttribute('stroke', checkStroke)
          setTimeout(() => {
            path.setAttribute('d', originalD)
            path.setAttribute('stroke', originalStroke)
          }, 2000)
        })
        .catch(() => {
          alert('Failed to copy URL')
        })
    })
  }
</script>
