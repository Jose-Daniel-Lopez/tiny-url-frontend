---
import { API_URL } from 'astro:env/client'
import UrlCard from './UrlCard.astro'
import type { UrlData } from '../types/url'
import SortIcon from '../icons/SortIcon.astro'

let urls: UrlData[] = []
try {
  const response = await fetch(`${API_URL}/urls`)
  urls = await response.json()
} catch {
  urls = []
}
---

<div class="mt-6">
  <h2
    class="text-2xl font-bold mb-4 flex items-center justify-between gap-4 tracking-wider"
  >
    <span class="blink">Shortened URLs</span>
    <button
      id="sort-button"
      class="hover:scale-110 transition-transform duration-200 cursor-pointer"
    >
      <div class="border-neon rounded-lg p-2 bg-gray-800/90">
        <SortIcon class="w-4 h-4" />
      </div>
    </button>
  </h2>
  {
    urls.length === 0 ? (
      <p>No URLs shortened yet.</p>
    ) : (
      <ul id="url-list" class="space-y-4">
        {urls.map((url: UrlData, index: number) => (
          <UrlCard
            originalUrl={url.originalUrl}
            shortUrl={url.shortUrl}
            createdDate={url.createdDate}
            index={index}
          />
        ))}
      </ul>
    )
  }
</div>

<script>
  const sortButton = document.getElementById('sort-button')
  const urlList = document.getElementById('url-list')
  let sortOrder = 'asc'

  if (sortButton && urlList) {
    sortButton.addEventListener('click', () => {
      const lis = Array.from(urlList.children).filter(
        (li) => li.tagName === 'LI',
      )

      // Sort based on data-date from <li>
      lis.sort((a, b) => {
        const attrA = a.getAttribute('data-date')
        const attrB = b.getAttribute('data-date')
        if (!attrA || !attrB) {
          return 0
        }
        const dateA = new Date(attrA)
        const dateB = new Date(attrB)

        if (isNaN(dateA.getTime()) || isNaN(dateB.getTime())) {
          return 0
        }

        return sortOrder === 'asc'
          ? dateA.getTime() - dateB.getTime()
          : dateB.getTime() - dateA.getTime()
      })

      // Re-append in sorted order
      urlList.innerHTML = ''
      lis.forEach((li) => urlList.appendChild(li))

      // Toggle order
      sortOrder = sortOrder === 'asc' ? 'desc' : 'asc'
    })
  }
</script>
